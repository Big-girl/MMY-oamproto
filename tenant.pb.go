// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: tenant.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OAMServer的租户信息(从云平台那边推过来的数据格式)
type OAMTenantAccept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 租户ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 平台id
	Platid string `protobuf:"bytes,2,opt,name=platid,proto3" json:"platid,omitempty"`
	// 租户状态
	Status bool `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	// 租户创建时间
	Createtime int64 `protobuf:"varint,4,opt,name=createtime,proto3" json:"createtime,omitempty"`
	// 租户是否私有化部署
	Private bool `protobuf:"varint,5,opt,name=private,proto3" json:"private,omitempty"`
	// 租户部署后的地址
	Ip string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	// 租户激活标记
	Isactive bool `protobuf:"varint,7,opt,name=isactive,proto3" json:"isactive,omitempty"`
	// 下面的接口是前端页面需要的额外参数
	// 租户下面不同状态的客户端数量
	Statuscount map[int32]int32 `protobuf:"bytes,11,rep,name=statuscount,proto3" json:"statuscount,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *OAMTenantAccept) Reset() {
	*x = OAMTenantAccept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAMTenantAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAMTenantAccept) ProtoMessage() {}

func (x *OAMTenantAccept) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAMTenantAccept.ProtoReflect.Descriptor instead.
func (*OAMTenantAccept) Descriptor() ([]byte, []int) {
	return file_tenant_proto_rawDescGZIP(), []int{0}
}

func (x *OAMTenantAccept) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OAMTenantAccept) GetPlatid() string {
	if x != nil {
		return x.Platid
	}
	return ""
}

func (x *OAMTenantAccept) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *OAMTenantAccept) GetCreatetime() int64 {
	if x != nil {
		return x.Createtime
	}
	return 0
}

func (x *OAMTenantAccept) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *OAMTenantAccept) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *OAMTenantAccept) GetIsactive() bool {
	if x != nil {
		return x.Isactive
	}
	return false
}

func (x *OAMTenantAccept) GetStatuscount() map[int32]int32 {
	if x != nil {
		return x.Statuscount
	}
	return nil
}

// 接受客户端信息的请求参数
type AcceptTenantListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 校验参数
	Co *CheckObj `protobuf:"bytes,1,opt,name=co,proto3" json:"co,omitempty"`
	// 租户的信息
	List []*OAMTenantAccept `protobuf:"bytes,20,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AcceptTenantListRequest) Reset() {
	*x = AcceptTenantListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptTenantListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTenantListRequest) ProtoMessage() {}

func (x *AcceptTenantListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTenantListRequest.ProtoReflect.Descriptor instead.
func (*AcceptTenantListRequest) Descriptor() ([]byte, []int) {
	return file_tenant_proto_rawDescGZIP(), []int{1}
}

func (x *AcceptTenantListRequest) GetCo() *CheckObj {
	if x != nil {
		return x.Co
	}
	return nil
}

func (x *AcceptTenantListRequest) GetList() []*OAMTenantAccept {
	if x != nil {
		return x.List
	}
	return nil
}

// 接受租户信息的响应参数
type AcceptTenantListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 提示信息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 影响行数
	Affectedrows int64 `protobuf:"varint,3,opt,name=affectedrows,proto3" json:"affectedrows,omitempty"`
}

func (x *AcceptTenantListReply) Reset() {
	*x = AcceptTenantListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptTenantListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTenantListReply) ProtoMessage() {}

func (x *AcceptTenantListReply) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTenantListReply.ProtoReflect.Descriptor instead.
func (*AcceptTenantListReply) Descriptor() ([]byte, []int) {
	return file_tenant_proto_rawDescGZIP(), []int{2}
}

func (x *AcceptTenantListReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AcceptTenantListReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AcceptTenantListReply) GetAffectedrows() int64 {
	if x != nil {
		return x.Affectedrows
	}
	return 0
}

// 获取租户列表的请求参数
type ListTenantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Co *CheckObj `protobuf:"bytes,100,opt,name=co,proto3" json:"co,omitempty"`
	// 查询数据需要的业务参数
	// 平台id
	Platid string `protobuf:"bytes,1,opt,name=platid,proto3" json:"platid,omitempty"`
	// 租户id
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// 状态
	Status int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	// 是否本地化
	Private int32 `protobuf:"varint,4,opt,name=private,proto3" json:"private,omitempty"`
	// 是否激活：private为1的时候才会假如这个判断
	Isactive int32 `protobuf:"varint,5,opt,name=isactive,proto3" json:"isactive,omitempty"`
	// 多个租户id
	Ids []string `protobuf:"bytes,6,rep,name=ids,proto3" json:"ids,omitempty"`
	// 创建时间：开始时间
	Cstarttime int64 `protobuf:"varint,7,opt,name=cstarttime,proto3" json:"cstarttime,omitempty"`
	// 创建时间：结束时间
	Cendtime int64 `protobuf:"varint,8,opt,name=cendtime,proto3" json:"cendtime,omitempty"`
	// 其他参数
	// 分页参数：第几页
	Pageindex int64 `protobuf:"varint,20,opt,name=pageindex,proto3" json:"pageindex,omitempty"`
	// 分页参数：几条数据
	Pagelimit int64 `protobuf:"varint,21,opt,name=pagelimit,proto3" json:"pagelimit,omitempty"`
}

func (x *ListTenantRequest) Reset() {
	*x = ListTenantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTenantRequest) ProtoMessage() {}

func (x *ListTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTenantRequest.ProtoReflect.Descriptor instead.
func (*ListTenantRequest) Descriptor() ([]byte, []int) {
	return file_tenant_proto_rawDescGZIP(), []int{3}
}

func (x *ListTenantRequest) GetCo() *CheckObj {
	if x != nil {
		return x.Co
	}
	return nil
}

func (x *ListTenantRequest) GetPlatid() string {
	if x != nil {
		return x.Platid
	}
	return ""
}

func (x *ListTenantRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListTenantRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListTenantRequest) GetPrivate() int32 {
	if x != nil {
		return x.Private
	}
	return 0
}

func (x *ListTenantRequest) GetIsactive() int32 {
	if x != nil {
		return x.Isactive
	}
	return 0
}

func (x *ListTenantRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListTenantRequest) GetCstarttime() int64 {
	if x != nil {
		return x.Cstarttime
	}
	return 0
}

func (x *ListTenantRequest) GetCendtime() int64 {
	if x != nil {
		return x.Cendtime
	}
	return 0
}

func (x *ListTenantRequest) GetPageindex() int64 {
	if x != nil {
		return x.Pageindex
	}
	return 0
}

func (x *ListTenantRequest) GetPagelimit() int64 {
	if x != nil {
		return x.Pagelimit
	}
	return 0
}

// 获取租户列表的响应参数
type ListTenantReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 符合数据的列表数据
	List []*OAMTenantAccept `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 符合条件的数据总数
	Totalcount int64 `protobuf:"varint,2,opt,name=totalcount,proto3" json:"totalcount,omitempty"`
}

func (x *ListTenantReply) Reset() {
	*x = ListTenantReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTenantReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTenantReply) ProtoMessage() {}

func (x *ListTenantReply) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTenantReply.ProtoReflect.Descriptor instead.
func (*ListTenantReply) Descriptor() ([]byte, []int) {
	return file_tenant_proto_rawDescGZIP(), []int{4}
}

func (x *ListTenantReply) GetList() []*OAMTenantAccept {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListTenantReply) GetTotalcount() int64 {
	if x != nil {
		return x.Totalcount
	}
	return 0
}

var File_tenant_proto protoreflect.FileDescriptor

var file_tenant_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x02, 0x0a,
	0x0f, 0x4f, 0x41, 0x4d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4f, 0x41,
	0x4d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x3e, 0x0a, 0x10, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5a, 0x0a, 0x17, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x63, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x62, 0x6a, 0x52, 0x02, 0x63,
	0x6f, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x4f, 0x41, 0x4d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x69, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x72, 0x6f,
	0x77, 0x73, 0x22, 0xae, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x63, 0x6f, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x62, 0x6a, 0x52,
	0x02, 0x63, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x69, 0x73, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x57, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4f, 0x41, 0x4d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09, 0x5a, 0x07,
	0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tenant_proto_rawDescOnce sync.Once
	file_tenant_proto_rawDescData = file_tenant_proto_rawDesc
)

func file_tenant_proto_rawDescGZIP() []byte {
	file_tenant_proto_rawDescOnce.Do(func() {
		file_tenant_proto_rawDescData = protoimpl.X.CompressGZIP(file_tenant_proto_rawDescData)
	})
	return file_tenant_proto_rawDescData
}

var file_tenant_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_tenant_proto_goTypes = []interface{}{
	(*OAMTenantAccept)(nil),         // 0: OAMTenantAccept
	(*AcceptTenantListRequest)(nil), // 1: AcceptTenantListRequest
	(*AcceptTenantListReply)(nil),   // 2: AcceptTenantListReply
	(*ListTenantRequest)(nil),       // 3: ListTenantRequest
	(*ListTenantReply)(nil),         // 4: ListTenantReply
	nil,                             // 5: OAMTenantAccept.StatuscountEntry
	(*CheckObj)(nil),                // 6: CheckObj
}
var file_tenant_proto_depIdxs = []int32{
	5, // 0: OAMTenantAccept.statuscount:type_name -> OAMTenantAccept.StatuscountEntry
	6, // 1: AcceptTenantListRequest.co:type_name -> CheckObj
	0, // 2: AcceptTenantListRequest.list:type_name -> OAMTenantAccept
	6, // 3: ListTenantRequest.co:type_name -> CheckObj
	0, // 4: ListTenantReply.list:type_name -> OAMTenantAccept
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_tenant_proto_init() }
func file_tenant_proto_init() {
	if File_tenant_proto != nil {
		return
	}
	file_client_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tenant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAMTenantAccept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptTenantListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptTenantListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTenantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTenantReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tenant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tenant_proto_goTypes,
		DependencyIndexes: file_tenant_proto_depIdxs,
		MessageInfos:      file_tenant_proto_msgTypes,
	}.Build()
	File_tenant_proto = out.File
	file_tenant_proto_rawDesc = nil
	file_tenant_proto_goTypes = nil
	file_tenant_proto_depIdxs = nil
}
