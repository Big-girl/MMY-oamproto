syntax = "proto3";

option go_package = ".;proto";

import "google/api/annotations.proto";
import "ping.proto";
import "cliflags.proto";
import "client.proto";
import "policylib.proto";
import "modelversion.proto";
import "tenant.proto";
import "plat.proto";
// 在proto目录下执行下面两个命令
// protoc -I. -I$GOPATH/src -I$GOPATH/pkg/mod -I$GOPATH/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.16.0/third_party/googleapis --go_out=. --go-grpc_out=require_unimplemented_servers=false:. *.proto
// protoc -I. -I$GOPATH/src -I$GOPATH/pkg/mod -I$GOPATH/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.16.0/third_party/googleapis --grpc-gateway_out=logtostderr=true:. *.proto
service OAMServer{
     // 服务测试接口
     rpc Ping(Pong)returns(Pong){
        option (google.api.http) ={
            post:"/ping",
            body:"*"
        };
    }
    // 获取客户端日志标记
    rpc GetCliLogFlags(GetCliFlagsRequest)returns(GetCliLogFlagsReply){
        option (google.api.http) ={
            post:"/oam/get/logflags"
            body:"*"
        };
    }
     // 获取客户端允许升级标记
     rpc GetCliUpFlags(GetCliFlagsRequest)returns(GetCliUpFlagsReply){
        option (google.api.http) ={
            post:"/oam/get/upflags"
            body:"*"
        };
    }
    // 接受客户端信息从租户
    rpc AcceptClientList(AcceptClientListRequest)returns(AcceptClientListReply){
        option (google.api.http)= {
            post:"/oam/accept/clients"
            body:"*"
        };
    }
    // 获取客户端列表
     rpc ListClient(ListClientRequest)returns(ListClientReply){
        option (google.api.http)= {
            post:"/oam/list/client"
            body:"*"
        };
    }
    // 获取单个客户端
     rpc GetClient(ListClientRequest)returns(OAMClient){
        option (google.api.http)= {
            post:"/oam/get/client"
            body:"*"
        };
    }
    // 批量更新客户端
    rpc BatchUpdateClientFlags(BatchUpdateClientFlagsRequest)returns(UpdateClientReply){
        option (google.api.http)= {
            post:"/oam/put/cliflags"
            body:"*"
        };
    }
     // 策略下发:先放在这里
     rpc ReleasePolicy(ReleasePolicyRequest)returns(ListPolicyReply){
        option (google.api.http)= {
            post:"/oam/release/policy"
            body:"*"
        };
    }
    // 新增策略
    rpc AddPolicy(AddPolicyRequest)returns(OperateReply){
        option (google.api.http)= {
            post:"/oam/add/policy"
            body:"*"
        };
    }
    // 修改
    rpc PutPolicy(PutPolicyRequest)returns(OperateReply){
        option (google.api.http)= {
            post:"/oam/update/policy"
            body:"*"
        };
    }
    // 删除
    rpc DelPolicy(PolicyQuery)returns(OperateReply){
        option (google.api.http)= {
            post:"/oam/delete/policy"
            body:"*"
        };
    }
    // 获取列表
    rpc ListPolicy(PolicyQuery)returns(ListPolicyReply){
        option (google.api.http)= {
            post:"/oam/list/policy"
            body:"*"
        };
    }
    // 获取单个
    rpc GetPolicy(PolicyQuery)returns(GetPolicyReply){
        option (google.api.http)= {
            post:"/oam/get/policy"
            body:"*"
        };
    }
    // 获取modelVersion
    rpc ListModelVersion(ModelVersion)returns(ModelVersion){
        option (google.api.http)= {
            post:"/oam/list/modelversion"
            body:"*"
        };
    }
    // 接受客户端信息从租户
    rpc AcceptTenantList(AcceptTenantListRequest)returns(AcceptTenantListReply){
        option (google.api.http)= {
            post:"/oam/accept/tenants"
            body:"*"
        };
    }
    // 获取租户所属平台的域名
    rpc GetServerIp(GetPlatRequest)returns(GetServerIpReply){
        option (google.api.http)= {
            post:"/oam/getip"
            body:"*"
        };
    }

    // 创建平台账号
    rpc AddPlatAccount(AddPlatRequest)returns(PlatReply){
        option (google.api.http)= {
            post:"/oam/add/plat"
            body:"*"
        };
    }
    // 添加平台授权
    rpc AddPlatLicense(AddPlatLicenseRequest)returns(PlatReply){
        option (google.api.http)= {
            post:"/oam/add/platlicense"
            body:"*"
        };
    }
    // 购买平台授权点数
    rpc BuyPlatLicenseCount(BuyPlatLicenseCountRequest)returns(PlatReply){
        option (google.api.http)= {
            post:"/oam/buy/platlicensecount"
            body:"*"
        };
    }
    // 发送激活验证码
    rpc SendActiveCode(ActivePlatInfoRequest)returns(PlatReply){
        option (google.api.http)= {
            post:"/oam/sendcode"
            body:"*"
        };
    }
    // 激活平台
    rpc ActivePlatInfo(ActivePlatInfoRequest)returns(ActivePlatInfoReply){
        option (google.api.http)= {
            post:"/oam/activation"
            body:"*"
        };
    }
    // 获取平台信息
    rpc GetPlatInfo(GetPlatInfoRequest)returns(GetPlatInfoReply){
        option (google.api.http)= {
            post:"/oam/get/platinfo"
            body:"*"
        };
    }
    // 获取平台授权信息
    rpc GetPlatLicenseInfo(GetPlatLicenseInfoRequest)returns(GetPlatLicenseInfoReply){
        option (google.api.http)= {
            post:"/oam/get/platlicenseinfo"
            body:"*"
        };
    }
    // 更新平台信息
    rpc UpdatePlatInfo(UpdatePlatInfoRequest)returns(UpdatePlatInfoReply){
        option (google.api.http)= {
            post:"/oam/update/platinfo"
            body:"*"
        };
    }
    // 更新平台授权信息
    rpc UpdatePlatLicenseInfo(UpdatePlatLicenseInfoRequest)returns(UpdatePlatLicenseInfoReply){
        option (google.api.http)= {
            post:"/oam/update/platlicenseinfo"
            body:"*"
        };
    }
}

