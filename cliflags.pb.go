// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: cliflags.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取客户标志的请求参数
type GetCliFlagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 每个接口都需要的校验参数
	// 租户ID
	Ti string `protobuf:"bytes,1,opt,name=ti,proto3" json:"ti,omitempty"`
	// 客户端ID
	Ci string `protobuf:"bytes,2,opt,name=ci,proto3" json:"ci,omitempty"`
	// 密码
	Tag string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	// 时间戳
	T string `protobuf:"bytes,4,opt,name=t,proto3" json:"t,omitempty"`
}

func (x *GetCliFlagsRequest) Reset() {
	*x = GetCliFlagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cliflags_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCliFlagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCliFlagsRequest) ProtoMessage() {}

func (x *GetCliFlagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cliflags_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCliFlagsRequest.ProtoReflect.Descriptor instead.
func (*GetCliFlagsRequest) Descriptor() ([]byte, []int) {
	return file_cliflags_proto_rawDescGZIP(), []int{0}
}

func (x *GetCliFlagsRequest) GetTi() string {
	if x != nil {
		return x.Ti
	}
	return ""
}

func (x *GetCliFlagsRequest) GetCi() string {
	if x != nil {
		return x.Ci
	}
	return ""
}

func (x *GetCliFlagsRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GetCliFlagsRequest) GetT() string {
	if x != nil {
		return x.T
	}
	return ""
}

// 获取客户端日志标志的响应参数
type GetCliLogFlagsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 客户端服务日志:logflag->是否开启debug日志;logupflag->是否上传日志
	Log map[string]int32 `protobuf:"bytes,2,rep,name=log,proto3" json:"log,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// 下发SdDoc服务是否开机启动,1不允许,0允许
	Doc int32 `protobuf:"varint,3,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *GetCliLogFlagsReply) Reset() {
	*x = GetCliLogFlagsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cliflags_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCliLogFlagsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCliLogFlagsReply) ProtoMessage() {}

func (x *GetCliLogFlagsReply) ProtoReflect() protoreflect.Message {
	mi := &file_cliflags_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCliLogFlagsReply.ProtoReflect.Descriptor instead.
func (*GetCliLogFlagsReply) Descriptor() ([]byte, []int) {
	return file_cliflags_proto_rawDescGZIP(), []int{1}
}

func (x *GetCliLogFlagsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCliLogFlagsReply) GetLog() map[string]int32 {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *GetCliLogFlagsReply) GetDoc() int32 {
	if x != nil {
		return x.Doc
	}
	return 0
}

// 获取客户端升级标志的响应参数
type GetCliUpFlagsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 默认允许升级(0禁止,1允许)
	Up int32 `protobuf:"varint,2,opt,name=up,proto3" json:"up,omitempty"`
}

func (x *GetCliUpFlagsReply) Reset() {
	*x = GetCliUpFlagsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cliflags_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCliUpFlagsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCliUpFlagsReply) ProtoMessage() {}

func (x *GetCliUpFlagsReply) ProtoReflect() protoreflect.Message {
	mi := &file_cliflags_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCliUpFlagsReply.ProtoReflect.Descriptor instead.
func (*GetCliUpFlagsReply) Descriptor() ([]byte, []int) {
	return file_cliflags_proto_rawDescGZIP(), []int{2}
}

func (x *GetCliUpFlagsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCliUpFlagsReply) GetUp() int32 {
	if x != nil {
		return x.Up
	}
	return 0
}

var File_cliflags_proto protoreflect.FileDescriptor

var file_cliflags_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x54, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x63, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x01, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x69, 0x4c, 0x6f, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x4c, 0x6f, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03,
	0x6c, 0x6f, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x64, 0x6f, 0x63, 0x1a, 0x36, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x38, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x55, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x75, 0x70, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cliflags_proto_rawDescOnce sync.Once
	file_cliflags_proto_rawDescData = file_cliflags_proto_rawDesc
)

func file_cliflags_proto_rawDescGZIP() []byte {
	file_cliflags_proto_rawDescOnce.Do(func() {
		file_cliflags_proto_rawDescData = protoimpl.X.CompressGZIP(file_cliflags_proto_rawDescData)
	})
	return file_cliflags_proto_rawDescData
}

var file_cliflags_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cliflags_proto_goTypes = []interface{}{
	(*GetCliFlagsRequest)(nil),  // 0: GetCliFlagsRequest
	(*GetCliLogFlagsReply)(nil), // 1: GetCliLogFlagsReply
	(*GetCliUpFlagsReply)(nil),  // 2: GetCliUpFlagsReply
	nil,                         // 3: GetCliLogFlagsReply.LogEntry
}
var file_cliflags_proto_depIdxs = []int32{
	3, // 0: GetCliLogFlagsReply.log:type_name -> GetCliLogFlagsReply.LogEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cliflags_proto_init() }
func file_cliflags_proto_init() {
	if File_cliflags_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cliflags_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCliFlagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cliflags_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCliLogFlagsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cliflags_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCliUpFlagsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cliflags_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cliflags_proto_goTypes,
		DependencyIndexes: file_cliflags_proto_depIdxs,
		MessageInfos:      file_cliflags_proto_msgTypes,
	}.Build()
	File_cliflags_proto = out.File
	file_cliflags_proto_rawDesc = nil
	file_cliflags_proto_goTypes = nil
	file_cliflags_proto_depIdxs = nil
}
