// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: client.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OAMServer的客户端信息(从租户那边推过来的数据格式)
type OAMClientAccept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户端ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 租户ID
	Tenantid string `protobuf:"bytes,2,opt,name=tenantid,proto3" json:"tenantid,omitempty"`
	// 版本号
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// 系统信息
	Systeminfo string `protobuf:"bytes,4,opt,name=systeminfo,proto3" json:"systeminfo,omitempty"`
	// ip
	Ip string `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	// mac地址
	Mac string `protobuf:"bytes,6,opt,name=mac,proto3" json:"mac,omitempty"`
	// 最后登录时间
	Lasttime int64 `protobuf:"varint,7,opt,name=lasttime,proto3" json:"lasttime,omitempty"`
	// 是否卸载
	Uninstall bool `protobuf:"varint,8,opt,name=uninstall,proto3" json:"uninstall,omitempty"`
	// 客户端服务及对应状态
	Sdstatus string `protobuf:"bytes,9,opt,name=sdstatus,proto3" json:"sdstatus,omitempty"`
	// app的版本信息
	Appversion string `protobuf:"bytes,11,opt,name=appversion,proto3" json:"appversion,omitempty"`
	// 标记
	Otherflags string `protobuf:"bytes,10,opt,name=otherflags,proto3" json:"otherflags,omitempty"`
	// 客户端动态库的版本
	Verdll string `protobuf:"bytes,12,opt,name=verdll,proto3" json:"verdll,omitempty"`
}

func (x *OAMClientAccept) Reset() {
	*x = OAMClientAccept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAMClientAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAMClientAccept) ProtoMessage() {}

func (x *OAMClientAccept) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAMClientAccept.ProtoReflect.Descriptor instead.
func (*OAMClientAccept) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

func (x *OAMClientAccept) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OAMClientAccept) GetTenantid() string {
	if x != nil {
		return x.Tenantid
	}
	return ""
}

func (x *OAMClientAccept) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OAMClientAccept) GetSysteminfo() string {
	if x != nil {
		return x.Systeminfo
	}
	return ""
}

func (x *OAMClientAccept) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *OAMClientAccept) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *OAMClientAccept) GetLasttime() int64 {
	if x != nil {
		return x.Lasttime
	}
	return 0
}

func (x *OAMClientAccept) GetUninstall() bool {
	if x != nil {
		return x.Uninstall
	}
	return false
}

func (x *OAMClientAccept) GetSdstatus() string {
	if x != nil {
		return x.Sdstatus
	}
	return ""
}

func (x *OAMClientAccept) GetAppversion() string {
	if x != nil {
		return x.Appversion
	}
	return ""
}

func (x *OAMClientAccept) GetOtherflags() string {
	if x != nil {
		return x.Otherflags
	}
	return ""
}

func (x *OAMClientAccept) GetVerdll() string {
	if x != nil {
		return x.Verdll
	}
	return ""
}

// OAMServer的客户端信息(返回给前端的)
type OAMClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户端ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 租户ID
	Tenantid string `protobuf:"bytes,2,opt,name=tenantid,proto3" json:"tenantid,omitempty"`
	// 版本号
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// 系统信息
	Systeminfo string `protobuf:"bytes,4,opt,name=systeminfo,proto3" json:"systeminfo,omitempty"`
	// ip
	Ip string `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	// mac地址
	Mac string `protobuf:"bytes,6,opt,name=mac,proto3" json:"mac,omitempty"`
	// 最后登录时间
	Lasttime int64 `protobuf:"varint,7,opt,name=lasttime,proto3" json:"lasttime,omitempty"`
	// 是否卸载
	Uninstall bool `protobuf:"varint,8,opt,name=uninstall,proto3" json:"uninstall,omitempty"`
	// 客户端服务及对应状态
	Sdstatus map[string]int32 `protobuf:"bytes,9,rep,name=sdstatus,proto3" json:"sdstatus,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// app的版本信息
	Appversion map[string]string `protobuf:"bytes,11,rep,name=appversion,proto3" json:"appversion,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 标记
	Otherflags string `protobuf:"bytes,10,opt,name=otherflags,proto3" json:"otherflags,omitempty"`
	// 客户端动态库的版本
	Verdll string `protobuf:"bytes,12,opt,name=verdll,proto3" json:"verdll,omitempty"`
}

func (x *OAMClient) Reset() {
	*x = OAMClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAMClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAMClient) ProtoMessage() {}

func (x *OAMClient) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAMClient.ProtoReflect.Descriptor instead.
func (*OAMClient) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

func (x *OAMClient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OAMClient) GetTenantid() string {
	if x != nil {
		return x.Tenantid
	}
	return ""
}

func (x *OAMClient) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OAMClient) GetSysteminfo() string {
	if x != nil {
		return x.Systeminfo
	}
	return ""
}

func (x *OAMClient) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *OAMClient) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *OAMClient) GetLasttime() int64 {
	if x != nil {
		return x.Lasttime
	}
	return 0
}

func (x *OAMClient) GetUninstall() bool {
	if x != nil {
		return x.Uninstall
	}
	return false
}

func (x *OAMClient) GetSdstatus() map[string]int32 {
	if x != nil {
		return x.Sdstatus
	}
	return nil
}

func (x *OAMClient) GetAppversion() map[string]string {
	if x != nil {
		return x.Appversion
	}
	return nil
}

func (x *OAMClient) GetOtherflags() string {
	if x != nil {
		return x.Otherflags
	}
	return ""
}

func (x *OAMClient) GetVerdll() string {
	if x != nil {
		return x.Verdll
	}
	return ""
}

// 客户端信息-各种标记
type Otherflags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc int32            `protobuf:"varint,10,opt,name=doc,proto3" json:"doc,omitempty"`
	Up  int32            `protobuf:"varint,11,opt,name=up,proto3" json:"up,omitempty"`
	Log map[string]int32 `protobuf:"bytes,12,rep,name=log,proto3" json:"log,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Otherflags) Reset() {
	*x = Otherflags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Otherflags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Otherflags) ProtoMessage() {}

func (x *Otherflags) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Otherflags.ProtoReflect.Descriptor instead.
func (*Otherflags) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{2}
}

func (x *Otherflags) GetDoc() int32 {
	if x != nil {
		return x.Doc
	}
	return 0
}

func (x *Otherflags) GetUp() int32 {
	if x != nil {
		return x.Up
	}
	return 0
}

func (x *Otherflags) GetLog() map[string]int32 {
	if x != nil {
		return x.Log
	}
	return nil
}

// 接受客户端信息的请求参数
type AcceptClientListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 每个接口都需要的校验参数
	// 租户ID
	Ti string `protobuf:"bytes,1,opt,name=ti,proto3" json:"ti,omitempty"`
	// 客户端ID
	Ci string `protobuf:"bytes,2,opt,name=ci,proto3" json:"ci,omitempty"`
	// 密码
	Tag string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	// 时间戳
	T string `protobuf:"bytes,4,opt,name=t,proto3" json:"t,omitempty"`
	// 真正的接口业务参数
	// 客户端的信息
	List []*OAMClientAccept `protobuf:"bytes,20,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AcceptClientListRequest) Reset() {
	*x = AcceptClientListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptClientListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptClientListRequest) ProtoMessage() {}

func (x *AcceptClientListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptClientListRequest.ProtoReflect.Descriptor instead.
func (*AcceptClientListRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3}
}

func (x *AcceptClientListRequest) GetTi() string {
	if x != nil {
		return x.Ti
	}
	return ""
}

func (x *AcceptClientListRequest) GetCi() string {
	if x != nil {
		return x.Ci
	}
	return ""
}

func (x *AcceptClientListRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *AcceptClientListRequest) GetT() string {
	if x != nil {
		return x.T
	}
	return ""
}

func (x *AcceptClientListRequest) GetList() []*OAMClientAccept {
	if x != nil {
		return x.List
	}
	return nil
}

// 接受客户端信息的响应参数
type AcceptClientListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 提示信息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 影响行数
	Affectedrows int64 `protobuf:"varint,3,opt,name=affectedrows,proto3" json:"affectedrows,omitempty"`
}

func (x *AcceptClientListReply) Reset() {
	*x = AcceptClientListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptClientListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptClientListReply) ProtoMessage() {}

func (x *AcceptClientListReply) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptClientListReply.ProtoReflect.Descriptor instead.
func (*AcceptClientListReply) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{4}
}

func (x *AcceptClientListReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AcceptClientListReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AcceptClientListReply) GetAffectedrows() int64 {
	if x != nil {
		return x.Affectedrows
	}
	return 0
}

// 获取客户端列表的请求参数
type ListClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户端ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 多个客户端ID
	Ids []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	// 租户ID
	Tenantid string `protobuf:"bytes,3,opt,name=tenantid,proto3" json:"tenantid,omitempty"`
	// 客户端版本信息
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// ip
	Ip string `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	// mac address
	Mac string `protobuf:"bytes,6,opt,name=mac,proto3" json:"mac,omitempty"`
	// 最后心跳时间
	Lasttime int64 `protobuf:"varint,7,opt,name=lasttime,proto3" json:"lasttime,omitempty"`
	// 是否卸载：1:是；2:否
	Uninstall int32 `protobuf:"varint,8,opt,name=uninstall,proto3" json:"uninstall,omitempty"`
	// 其他参数
	// 分页参数：第几页
	Pageindex int64 `protobuf:"varint,20,opt,name=pageindex,proto3" json:"pageindex,omitempty"`
	// 分页参数：几条数据
	Pagelimit int64 `protobuf:"varint,21,opt,name=pagelimit,proto3" json:"pagelimit,omitempty"`
}

func (x *ListClientRequest) Reset() {
	*x = ListClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientRequest) ProtoMessage() {}

func (x *ListClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientRequest.ProtoReflect.Descriptor instead.
func (*ListClientRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{5}
}

func (x *ListClientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListClientRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListClientRequest) GetTenantid() string {
	if x != nil {
		return x.Tenantid
	}
	return ""
}

func (x *ListClientRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ListClientRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ListClientRequest) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *ListClientRequest) GetLasttime() int64 {
	if x != nil {
		return x.Lasttime
	}
	return 0
}

func (x *ListClientRequest) GetUninstall() int32 {
	if x != nil {
		return x.Uninstall
	}
	return 0
}

func (x *ListClientRequest) GetPageindex() int64 {
	if x != nil {
		return x.Pageindex
	}
	return 0
}

func (x *ListClientRequest) GetPagelimit() int64 {
	if x != nil {
		return x.Pagelimit
	}
	return 0
}

// 获取客户端列表的响应参数
type ListClientReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*OAMClient `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Totalcount int64        `protobuf:"varint,2,opt,name=totalcount,proto3" json:"totalcount,omitempty"`
}

func (x *ListClientReply) Reset() {
	*x = ListClientReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientReply) ProtoMessage() {}

func (x *ListClientReply) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientReply.ProtoReflect.Descriptor instead.
func (*ListClientReply) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{6}
}

func (x *ListClientReply) GetList() []*OAMClient {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListClientReply) GetTotalcount() int64 {
	if x != nil {
		return x.Totalcount
	}
	return 0
}

// 批量更新客户端的请求参数
type BatchUpdateClientFlagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 更新条件
	// 多个客户端ID
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// 租户ID
	Tenantid string `protobuf:"bytes,2,opt,name=tenantid,proto3" json:"tenantid,omitempty"`
	// 更新需要修改的东西
	Obj *Otherflags `protobuf:"bytes,10,opt,name=obj,proto3" json:"obj,omitempty"`
}

func (x *BatchUpdateClientFlagsRequest) Reset() {
	*x = BatchUpdateClientFlagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateClientFlagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateClientFlagsRequest) ProtoMessage() {}

func (x *BatchUpdateClientFlagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateClientFlagsRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateClientFlagsRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{7}
}

func (x *BatchUpdateClientFlagsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *BatchUpdateClientFlagsRequest) GetTenantid() string {
	if x != nil {
		return x.Tenantid
	}
	return ""
}

func (x *BatchUpdateClientFlagsRequest) GetObj() *Otherflags {
	if x != nil {
		return x.Obj
	}
	return nil
}

// 更新客户端的响应参数
type UpdateClientReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 提示信息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 影响行数
	Affectedrows int64 `protobuf:"varint,3,opt,name=affectedrows,proto3" json:"affectedrows,omitempty"`
}

func (x *UpdateClientReply) Reset() {
	*x = UpdateClientReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClientReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientReply) ProtoMessage() {}

func (x *UpdateClientReply) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientReply.ProtoReflect.Descriptor instead.
func (*UpdateClientReply) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateClientReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateClientReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateClientReply) GetAffectedrows() int64 {
	if x != nil {
		return x.Affectedrows
	}
	return 0
}

var File_client_proto protoreflect.FileDescriptor

var file_client_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7,
	0x02, 0x0a, 0x0f, 0x4f, 0x41, 0x4d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x64, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x64, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x64, 0x6c, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x65, 0x72, 0x64, 0x6c, 0x6c, 0x22, 0xf3, 0x03, 0x0a, 0x09, 0x4f, 0x41, 0x4d,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x61, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75,
	0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x34, 0x0a, 0x08, 0x73, 0x64, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4f, 0x41, 0x4d,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x64, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x64, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a,
	0x0a, 0x0a, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f, 0x41, 0x4d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65,
	0x72, 0x64, 0x6c, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x72, 0x64,
	0x6c, 0x6c, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x64, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3d, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8e,
	0x01, 0x0a, 0x0a, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x6f, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12,
	0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x75, 0x70, 0x12,
	0x26, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x1a, 0x36, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x7f, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x0c, 0x0a, 0x01,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4f, 0x41, 0x4d, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x69, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x83, 0x02, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x51, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4f, 0x41, 0x4d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6c, 0x0a, 0x1d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x03, 0x6f,
	0x62, 0x6a, 0x22, 0x65, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x72, 0x6f, 0x77, 0x73, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_proto_rawDescOnce sync.Once
	file_client_proto_rawDescData = file_client_proto_rawDesc
)

func file_client_proto_rawDescGZIP() []byte {
	file_client_proto_rawDescOnce.Do(func() {
		file_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_proto_rawDescData)
	})
	return file_client_proto_rawDescData
}

var file_client_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_client_proto_goTypes = []interface{}{
	(*OAMClientAccept)(nil),               // 0: OAMClientAccept
	(*OAMClient)(nil),                     // 1: OAMClient
	(*Otherflags)(nil),                    // 2: Otherflags
	(*AcceptClientListRequest)(nil),       // 3: AcceptClientListRequest
	(*AcceptClientListReply)(nil),         // 4: AcceptClientListReply
	(*ListClientRequest)(nil),             // 5: ListClientRequest
	(*ListClientReply)(nil),               // 6: ListClientReply
	(*BatchUpdateClientFlagsRequest)(nil), // 7: BatchUpdateClientFlagsRequest
	(*UpdateClientReply)(nil),             // 8: UpdateClientReply
	nil,                                   // 9: OAMClient.SdstatusEntry
	nil,                                   // 10: OAMClient.AppversionEntry
	nil,                                   // 11: Otherflags.LogEntry
}
var file_client_proto_depIdxs = []int32{
	9,  // 0: OAMClient.sdstatus:type_name -> OAMClient.SdstatusEntry
	10, // 1: OAMClient.appversion:type_name -> OAMClient.AppversionEntry
	11, // 2: Otherflags.log:type_name -> Otherflags.LogEntry
	0,  // 3: AcceptClientListRequest.list:type_name -> OAMClientAccept
	1,  // 4: ListClientReply.list:type_name -> OAMClient
	2,  // 5: BatchUpdateClientFlagsRequest.obj:type_name -> Otherflags
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_client_proto_init() }
func file_client_proto_init() {
	if File_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAMClientAccept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAMClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Otherflags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptClientListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptClientListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateClientFlagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClientReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_proto_goTypes,
		DependencyIndexes: file_client_proto_depIdxs,
		MessageInfos:      file_client_proto_msgTypes,
	}.Build()
	File_client_proto = out.File
	file_client_proto_rawDesc = nil
	file_client_proto_goTypes = nil
	file_client_proto_depIdxs = nil
}
