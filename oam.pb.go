// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: oam.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_oam_proto protoreflect.FileDescriptor

var file_oam_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6f, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x63, 0x6c, 0x69, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x6c, 0x69, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x32, 0xaa, 0x12, 0x0a, 0x09, 0x4f, 0x41, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x26, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x05, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x1a,
	0x05, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x22, 0x05,
	0x2f, 0x70, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x59, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x69, 0x4c, 0x6f, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x69, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x4c, 0x6f, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f,
	0x6f, 0x61, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x6f, 0x67, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x56, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x55, 0x70, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x69, 0x55, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x75, 0x70, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a, 0x10, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x6f, 0x61, 0x6d, 0x2f,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x01,
	0x2a, 0x12, 0x4f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f,
	0x6f, 0x61, 0x6d, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x3a,
	0x01, 0x2a, 0x12, 0x47, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x4f, 0x41, 0x4d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22,
	0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x6a, 0x0a, 0x16, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x22, 0x11, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x70, 0x75, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x58, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x15, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x6f, 0x61, 0x6d, 0x2f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x3a, 0x01,
	0x2a, 0x12, 0x49, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x11,
	0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0d, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x61,
	0x64, 0x64, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x4c, 0x0a, 0x09,
	0x50, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x11, 0x2e, 0x50, 0x75, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x47, 0x0a, 0x09, 0x44, 0x65,
	0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0c, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0d, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x6f,
	0x61, 0x6d, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x3a, 0x01, 0x2a, 0x12, 0x49, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x0c, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x6f, 0x61, 0x6d, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x46,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0c, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x22, 0x0f, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x53, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x22, 0x16, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a, 0x10, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x6f, 0x61, 0x6d, 0x2f,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x73, 0x3a, 0x01,
	0x2a, 0x12, 0x4f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12,
	0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f,
	0x6f, 0x61, 0x6d, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x3a,
	0x01, 0x2a, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x70, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f,
	0x6f, 0x61, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x69, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x47, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0f,
	0x2e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x61, 0x64, 0x64, 0x2f, 0x70, 0x6c,
	0x61, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x55, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x74,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61,
	0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x61, 0x64, 0x64, 0x2f, 0x70, 0x6c,
	0x61, 0x74, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a, 0x13,
	0x42, 0x75, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x42, 0x75, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x62, 0x75, 0x79, 0x2f, 0x70,
	0x6c, 0x61, 0x74, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a,
	0x01, 0x2a, 0x12, 0x4e, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12,
	0x22, 0x0d, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x5a, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x6f, 0x61, 0x6d,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x53,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f,
	0x6f, 0x61, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x66, 0x6f,
	0x3a, 0x01, 0x2a, 0x12, 0x6f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x69, 0x6e, 0x66,
	0x6f, 0x3a, 0x01, 0x2a, 0x12, 0x5f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x6f,
	0x61, 0x6d, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x69, 0x6e,
	0x66, 0x6f, 0x3a, 0x01, 0x2a, 0x12, 0x7b, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x22, 0x1b, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x70, 0x6c, 0x61, 0x74, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x3a,
	0x01, 0x2a, 0x12, 0x5b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var file_oam_proto_goTypes = []interface{}{
	(*Pong)(nil),                          // 0: Pong
	(*GetCliFlagsRequest)(nil),            // 1: GetCliFlagsRequest
	(*AcceptClientListRequest)(nil),       // 2: AcceptClientListRequest
	(*ListClientRequest)(nil),             // 3: ListClientRequest
	(*BatchUpdateClientFlagsRequest)(nil), // 4: BatchUpdateClientFlagsRequest
	(*ReleasePolicyRequest)(nil),          // 5: ReleasePolicyRequest
	(*AddPolicyRequest)(nil),              // 6: AddPolicyRequest
	(*PutPolicyRequest)(nil),              // 7: PutPolicyRequest
	(*PolicyQuery)(nil),                   // 8: PolicyQuery
	(*ModelVersion)(nil),                  // 9: ModelVersion
	(*AcceptTenantListRequest)(nil),       // 10: AcceptTenantListRequest
	(*ListTenantRequest)(nil),             // 11: ListTenantRequest
	(*GetPlatRequest)(nil),                // 12: GetPlatRequest
	(*AddPlatRequest)(nil),                // 13: AddPlatRequest
	(*AddPlatLicenseRequest)(nil),         // 14: AddPlatLicenseRequest
	(*BuyPlatLicenseCountRequest)(nil),    // 15: BuyPlatLicenseCountRequest
	(*ActivePlatInfoRequest)(nil),         // 16: ActivePlatInfoRequest
	(*GetPlatInfoRequest)(nil),            // 17: GetPlatInfoRequest
	(*GetPlatLicenseInfoRequest)(nil),     // 18: GetPlatLicenseInfoRequest
	(*UpdatePlatInfoRequest)(nil),         // 19: UpdatePlatInfoRequest
	(*UpdatePlatLicenseInfoRequest)(nil),  // 20: UpdatePlatLicenseInfoRequest
	(*GetPlatDomainRequest)(nil),          // 21: GetPlatDomainRequest
	(*GetCliLogFlagsReply)(nil),           // 22: GetCliLogFlagsReply
	(*GetCliUpFlagsReply)(nil),            // 23: GetCliUpFlagsReply
	(*AcceptClientListReply)(nil),         // 24: AcceptClientListReply
	(*ListClientReply)(nil),               // 25: ListClientReply
	(*OAMClient)(nil),                     // 26: OAMClient
	(*UpdateClientReply)(nil),             // 27: UpdateClientReply
	(*ListPolicyReply)(nil),               // 28: ListPolicyReply
	(*OperateReply)(nil),                  // 29: OperateReply
	(*GetPolicyReply)(nil),                // 30: GetPolicyReply
	(*AcceptTenantListReply)(nil),         // 31: AcceptTenantListReply
	(*ListTenantReply)(nil),               // 32: ListTenantReply
	(*GetServerIpReply)(nil),              // 33: GetServerIpReply
	(*PlatReply)(nil),                     // 34: PlatReply
	(*ActivePlatInfoReply)(nil),           // 35: ActivePlatInfoReply
	(*GetPlatInfoReply)(nil),              // 36: GetPlatInfoReply
	(*GetPlatLicenseInfoReply)(nil),       // 37: GetPlatLicenseInfoReply
	(*UpdatePlatInfoReply)(nil),           // 38: UpdatePlatInfoReply
	(*UpdatePlatLicenseInfoReply)(nil),    // 39: UpdatePlatLicenseInfoReply
	(*GetPlatDomainReply)(nil),            // 40: GetPlatDomainReply
}
var file_oam_proto_depIdxs = []int32{
	0,  // 0: OAMServer.Ping:input_type -> Pong
	1,  // 1: OAMServer.GetCliLogFlags:input_type -> GetCliFlagsRequest
	1,  // 2: OAMServer.GetCliUpFlags:input_type -> GetCliFlagsRequest
	2,  // 3: OAMServer.AcceptClientList:input_type -> AcceptClientListRequest
	3,  // 4: OAMServer.ListClient:input_type -> ListClientRequest
	3,  // 5: OAMServer.GetClient:input_type -> ListClientRequest
	4,  // 6: OAMServer.BatchUpdateClientFlags:input_type -> BatchUpdateClientFlagsRequest
	5,  // 7: OAMServer.ReleasePolicy:input_type -> ReleasePolicyRequest
	6,  // 8: OAMServer.AddPolicy:input_type -> AddPolicyRequest
	7,  // 9: OAMServer.PutPolicy:input_type -> PutPolicyRequest
	8,  // 10: OAMServer.DelPolicy:input_type -> PolicyQuery
	8,  // 11: OAMServer.ListPolicy:input_type -> PolicyQuery
	8,  // 12: OAMServer.GetPolicy:input_type -> PolicyQuery
	9,  // 13: OAMServer.ListModelVersion:input_type -> ModelVersion
	10, // 14: OAMServer.AcceptTenantList:input_type -> AcceptTenantListRequest
	11, // 15: OAMServer.ListTenant:input_type -> ListTenantRequest
	12, // 16: OAMServer.GetServerIp:input_type -> GetPlatRequest
	13, // 17: OAMServer.AddPlatAccount:input_type -> AddPlatRequest
	14, // 18: OAMServer.AddPlatLicense:input_type -> AddPlatLicenseRequest
	15, // 19: OAMServer.BuyPlatLicenseCount:input_type -> BuyPlatLicenseCountRequest
	16, // 20: OAMServer.SendActiveCode:input_type -> ActivePlatInfoRequest
	16, // 21: OAMServer.ActivePlatInfo:input_type -> ActivePlatInfoRequest
	17, // 22: OAMServer.GetPlatInfo:input_type -> GetPlatInfoRequest
	18, // 23: OAMServer.GetPlatLicenseInfo:input_type -> GetPlatLicenseInfoRequest
	19, // 24: OAMServer.UpdatePlatInfo:input_type -> UpdatePlatInfoRequest
	20, // 25: OAMServer.UpdatePlatLicenseInfo:input_type -> UpdatePlatLicenseInfoRequest
	21, // 26: OAMServer.GetPlatDomain:input_type -> GetPlatDomainRequest
	0,  // 27: OAMServer.Ping:output_type -> Pong
	22, // 28: OAMServer.GetCliLogFlags:output_type -> GetCliLogFlagsReply
	23, // 29: OAMServer.GetCliUpFlags:output_type -> GetCliUpFlagsReply
	24, // 30: OAMServer.AcceptClientList:output_type -> AcceptClientListReply
	25, // 31: OAMServer.ListClient:output_type -> ListClientReply
	26, // 32: OAMServer.GetClient:output_type -> OAMClient
	27, // 33: OAMServer.BatchUpdateClientFlags:output_type -> UpdateClientReply
	28, // 34: OAMServer.ReleasePolicy:output_type -> ListPolicyReply
	29, // 35: OAMServer.AddPolicy:output_type -> OperateReply
	29, // 36: OAMServer.PutPolicy:output_type -> OperateReply
	29, // 37: OAMServer.DelPolicy:output_type -> OperateReply
	28, // 38: OAMServer.ListPolicy:output_type -> ListPolicyReply
	30, // 39: OAMServer.GetPolicy:output_type -> GetPolicyReply
	9,  // 40: OAMServer.ListModelVersion:output_type -> ModelVersion
	31, // 41: OAMServer.AcceptTenantList:output_type -> AcceptTenantListReply
	32, // 42: OAMServer.ListTenant:output_type -> ListTenantReply
	33, // 43: OAMServer.GetServerIp:output_type -> GetServerIpReply
	34, // 44: OAMServer.AddPlatAccount:output_type -> PlatReply
	34, // 45: OAMServer.AddPlatLicense:output_type -> PlatReply
	34, // 46: OAMServer.BuyPlatLicenseCount:output_type -> PlatReply
	34, // 47: OAMServer.SendActiveCode:output_type -> PlatReply
	35, // 48: OAMServer.ActivePlatInfo:output_type -> ActivePlatInfoReply
	36, // 49: OAMServer.GetPlatInfo:output_type -> GetPlatInfoReply
	37, // 50: OAMServer.GetPlatLicenseInfo:output_type -> GetPlatLicenseInfoReply
	38, // 51: OAMServer.UpdatePlatInfo:output_type -> UpdatePlatInfoReply
	39, // 52: OAMServer.UpdatePlatLicenseInfo:output_type -> UpdatePlatLicenseInfoReply
	40, // 53: OAMServer.GetPlatDomain:output_type -> GetPlatDomainReply
	27, // [27:54] is the sub-list for method output_type
	0,  // [0:27] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_oam_proto_init() }
func file_oam_proto_init() {
	if File_oam_proto != nil {
		return
	}
	file_ping_proto_init()
	file_cliflags_proto_init()
	file_client_proto_init()
	file_policylib_proto_init()
	file_modelversion_proto_init()
	file_tenant_proto_init()
	file_plat_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oam_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oam_proto_goTypes,
		DependencyIndexes: file_oam_proto_depIdxs,
	}.Build()
	File_oam_proto = out.File
	file_oam_proto_rawDesc = nil
	file_oam_proto_goTypes = nil
	file_oam_proto_depIdxs = nil
}
